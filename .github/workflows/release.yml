name: Build and Release

on:
  push:
    branches:
      - release

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, darwin, windows]
        goarch: [amd64, arm64]
        exclude:
          - goos: windows
            goarch: arm64
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.22.3

      - name: Cache Go modules
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Go mod tidy
        run: go mod tidy

      - name: Build
        run: |
          mkdir -p dist
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o dist/comicepub2zip-${{ matrix.goos }}-${{ matrix.goarch }}

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: comicepub2zip-${{ matrix.goos }}-${{ matrix.goarch }}
          path: dist/comicepub2zip-${{ matrix.goos }}-${{ matrix.goarch }}

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download artifacts (Linux AMD64)
        uses: actions/download-artifact@v2
        with:
          name: comicepub2zip-linux-amd64
          path: dist/
      
      - name: Download artifacts (Darwin AMD64)
        uses: actions/download-artifact@v2
        with:
          name: comicepub2zip-darwin-amd64
          path: dist/

      - name: Download artifacts (Darwin ARM64)
        uses: actions/download-artifact@v2
        with:
          name: comicepub2zip-darwin-arm64
          path: dist/
      
      - name: Download artifacts (Windows AMD64)
        uses: actions/download-artifact@v2
        with:
          name: comicepub2zip-windows-amd64
          path: dist/

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: 'v${{ github.run_number }}'
          release_name: 'Release v${{ github.run_number }}'
          body: 'Auto-generated release from GitHub Actions'
          draft: false
          prerelease: false

      - name: Upload Release Asset Linux
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/comicepub2zip-linux-amd64
          asset_name: comicepub2zip-linux-amd64
          asset_content_type: application/octet-stream

      - name: Upload Release Asset Mac AMD64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/comicepub2zip-darwin-amd64
          asset_name: comicepub2zip-darwin-amd64
          asset_content_type: application/octet-stream

      - name: Upload Release Asset Mac ARM64 (M1)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/comicepub2zip-darwin-arm64
          asset_name: comicepub2zip-darwin-arm64
          asset_content_type: application/octet-stream

      - name: Upload Release Asset Windows
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/comicepub2zip-windows-amd64
          asset_name: comicepub2zip-windows-amd64.exe
          asset_content_type: application/octet-stream
